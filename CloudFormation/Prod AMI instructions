//take base vpc template and setup on empty ec2

sudo yum -y update
sudo yum remove ruby 
//removing the ruby gems, so run again
sudo yum remove ruby

sudo yum install ruby23-devel.x86_64
sudo yum install git
sudo yum install nginx
sudo yum install postgresql8-devel.x86_64
yum -y install gcc zlib-devel.x86_64  
sudo yum install sqlite-devel
sudo yum install gcc-c++

//installing node
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.0/install.sh | bash
. ~/.nvm/nvm.sh
nvm install 4.4.5

//creating working dir
git clone -b abaker_working_branch https://USER:PASSWORD@git.earthdata.nasa.gov/scm/cmrarc/cmr-metadata-review.git

//enter dir
cd cmr-metadata-review
gem install bundler --no-rdoc --no-ri

bundle install

//setting up the nginx settings for rails
sudo vi /etc/nginx/nginx.conf
//added in http section of .conf file

    upstream arcdash {
        server 127.0.0.1:3000;
    }

    //change root in server area to public for assets
    root         /home/ec2-user/cmr-metadata-review/public;

    #adding this for elb checks
    location /elb_status {
        proxy_pass http://arcdash;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
            #redirecting all traffic to https for elb to terminate
            if ($http_x_forwarded_proto = 'http') {
                return 301 https://arc-review.clients.element84.com$request_uri;
            }
            proxy_pass http://arcdash;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }



//added to ec2
sudo yum install -y awslogs

//aws log config file
/etc/awslogs/awslogs.conf
//aws log config:
datetime_format = %Y-%m-%dT%H:%M:%S
file = /home/ec2-user/cmr-metadata-review/log/production.log
buffer_duration = 5000
log_stream_name = {instance_id}
initial_position = end_of_file
log_group_name = /aws/cmr/prod_rails_log

//add to user data
service awslogs start


//set up DB connection

//stopping apache
sudo apachectl stop
//starting nginx
sudo service nginx restart 

//starting server if desired manually
bundle exec puma --debug --bind tcp://127.0.0.1:3000
