<div class="filter_row">
  <p>Filters:</p>

  <!-- Slider toggles -->
  <div class="filter_switches">

    <div class="filter_switch">
      <p class="filter_switch__title">Flagged by Script</p>
      <label class="switch">
        <input type="checkbox" id="script_toggle" onchange="toggleCells()">
        <div class="slider round"></div>
      </label>
    </div>

    <% if record.open? || record.in_arc_review? %>
      <div class="filter_switch">
        <p class="filter_switch__title">Requires 2nd Opinion</p>
        <label class="switch">
          <input type="checkbox" id="opinion_toggle" onchange="toggleCells()">
          <div class="slider round"></div>
        </label>
      </div>
    <% end %>

    <% if record.in_daac_review? %>
      <div class="filter_switch">
        <p class="filter_switch__title">ARC Feedback Requested</p>
        <label class="switch">
          <input type="checkbox" id="feedback_toggle" onchange="toggleCells()">
          <div class="slider round"></div>
        </label>
      </div>
    <% end %>

    <div class="filter_switch">
      <p class="filter_switch__title">Not Color Coded</p>
      <label class="switch">
        <input type="checkbox" id="color_toggle" onchange="toggleCells()">
        <div class="slider round"></div>
      </label>
    </div>

    <div class="filter_switch">
      <p class="filter_switch__title">Required by Schema and/or UMM</p>
      <label class="switch">
        <input type="checkbox" id="umm_toggle" onchange="toggleCells()">
        <div class="slider round"></div>
      </label>
    </div>
  </div>

  <div class="filter_dropdown">
    <i class="fa fa-floppy-o"></i>
    <p>SAVE AND GO TO:</p>
    <select class="filter_select" name="redirect_index" id="section_select" form="field_form">
      <% @navigation_list.each_with_index do |data_section, index_count| %>
        <option value="<%=index_count%>"><%= data_section %></option>
      <% end %>
    </select>
  </div>

  <script type="text/javascript">
    var section_select = document.getElementById("section_select");
    section_select.options[<%=params["section_index"].to_i %>].selected = true;
    section_select.onchange = function () {
      document.getElementById("field_form").submit();
    };

    //changing the button contents if user on first or last section of record
    var section_select_length = document.getElementById("section_select").options.length
    var button_width = '155px';
    if (<%=params["section_index"].to_i%> == (section_select_length - 1)) {
      document.getElementById('nextButtonText').innerHTML = 'METADATA';
      document.getElementById('nextButton').style.width = button_width;
      document.getElementById('previousButton').style.width = button_width;
    } else if (<%=params["section_index"].to_i%> == 0) {
      document.getElementById('previousButtonText').innerHTML = 'METADATA';
      document.getElementById('previousButton').style.width = button_width;
      document.getElementById('nextButton').style.width = button_width;
    }
  </script>

</div>

<script type="text/javascript">
  //each column cells are marked with a title class so that a row can be grabbed together
  var titleList = [];
  <% section_titles.each do |title| %>
    titleList.push("column_" + "<%=title%>");
  <% end %>

  function toggleCells() {
    unhideAllCells();

    var hiddenCells = [];

    //checks the toggle, then checks each cell of a row against the check_function
    function toggleCheck(toggle_name, cell_name, check_function) {
      var toggle = document.getElementById(toggle_name);
      if (toggle === undefined || toggle === null) {
        return;
      }

      if (toggle.checked) {
        var cells = document.getElementsByClassName(cell_name);
        //finding all the script_cells which have the check icon.
        for (var index in cells) {
          if (check_function(cells[parseInt(index)])) {
            hiddenCells.push(parseInt(index));
          }
        }
      }
    }

    //the statement provided in the anon function in cellCheck is the rule used for each set of hide/don't hide evals
    toggleCheck("script_toggle", "script_check_cell", cellCheck(function(single_div) {
      return single_div.children.length > 0;
    }));

    //checks if the check icon is visible
    toggleCheck("opinion_toggle", "opinion_cell", cellCheck(function(single_div) {
      return single_div.childNodes[3].childNodes[1].style.visibility == "visible";
    }));

    //checks if cell has color
    toggleCheck("color_toggle", "color_code_cell", cellCheck(function(single_div) {
      return !single_div.style.backgroundColor;
    }));

    //checks if check icon is present
    toggleCheck("umm_toggle", "umm_required_cell", cellCheck(function(single_div) {
      return single_div.children.length > 0;
    }));

    toggleCheck("feedback_toggle", "feedback_cell", cellCheck(function(singleDiv) {
      return singleDiv.querySelector("[id^='feedback_check_']").checked;
    }));

    //checking if all the table cells are hidden. True if cells to hide.length == totalCells.length
    var uniqueHidden = hiddenCells.filter(function(item, pos) {
        return hiddenCells.indexOf(item) == pos;
    });

    if (uniqueHidden.length == titleList.length) {
      document.getElementById("scroll_table").style.display = "none";
    }

    //hiding each column individually
    for (var columnNum in hiddenCells) {
      var hideCells = document.getElementsByClassName(titleList[hiddenCells[parseInt(columnNum)]]);
      for (var cell in hideCells) {
        if (!(hideCells[parseInt(cell)] == undefined)) {
          hideCells[parseInt(cell)].style.display = "none";
        }
      }
    }

    //resetting the text heights on each row header;
    adjustHeaderRowTextPosition();
  }

  function unhideAllCells() {
      document.getElementById("scroll_table").style.display = "block";

      for (var index in titleList) {
        var showCells = document.getElementsByClassName(titleList[parseInt(index)]);
        for (var cell in showCells) {
          if (showCells[parseInt(cell)]) {
            showCells[parseInt(cell)].style.display = "table-cell";
          }
        }
      }
  }

  function cellCheck(check_rule) {
    return function(single_div) {
      if (single_div == undefined || !single_div) {
        return false;
      }

      if(check_rule(single_div)) {
        return false;
      } else {
        return true;
      }
    }
  }

</script>
